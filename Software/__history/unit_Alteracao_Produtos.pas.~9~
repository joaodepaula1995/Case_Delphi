unit unit_Alteracao_Produtos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Buttons,
  Vcl.WinXCalendars, Vcl.Mask, Vcl.DBCtrls, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  TFRM_ALTERACAO_PRODUTOS = class(TForm)
    pn_wallpaper: TPanel;
    lbl_alteracao: TLabel;
    btn_salvar: TBitBtn;
    lbl_informe: TLabel;
    txt_porcentagem: TEdit;
    fd_atualizacao_produtos: TFDQuery;
    procedure btn_salvarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FRM_ALTERACAO_PRODUTOS: TFRM_ALTERACAO_PRODUTOS;

implementation

uses
  unit_Fecha_Sistema, unitDM_Categoria, unit_Mensagem, unit_Mensagem_Confirmacao, unit_Pesquisar, unit_Categoria, unitDM_Produto,
  unit_Produto;

{$R *.dfm}

procedure TFRM_ALTERACAO_PRODUTOS.btn_salvarClick(Sender: TObject);
var
  Porcentagem: Double;
begin
  if TryStrToFloat(txt_porcentagem.Text, Porcentagem) then
  begin
    fd_atualizacao_produtos := TFDQuery.Create(nil);
    try
      fd_atualizacao_produtos.Connection := DM_produto.conexao;
      fd_atualizacao_produtos.SQL.Text :=  'UPDATE case_delphi.produto ' +
                            'SET ultpreco = ROUND(preco, 2), ' +
                            'preco = ROUND(preco * (1 + (:Porcentagem / 100)), 2), ' +
                            'dataalteracao = NOW()';
      fd_atualizacao_produtos.Params.Clear;
      fd_atualizacao_produtos.Params.CreateParam(ftFloat, 'Porcentagem', ptInput).AsFloat := Porcentagem;
      fd_atualizacao_produtos.ExecSQL;
    finally
      fd_atualizacao_produtos.Free;
    end;
  end
  else
  begin
    ShowMessage('Porcentagem inválida.');
  end;
end;
end.
